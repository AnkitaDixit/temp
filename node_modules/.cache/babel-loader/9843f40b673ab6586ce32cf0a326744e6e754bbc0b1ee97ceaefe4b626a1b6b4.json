{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ankitadixit/Desktop/Assignment/temp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/ankitadixit/Desktop/Assignment/temp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/ankitadixit/Desktop/Assignment/temp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useRef}from'react';import'./SearchBar.css';import _ from'lodash';import{getLocalitySuggestions,getLodgingSuggestions}from'../../utils/api';import SuggestionCard from'../SuggestionCard/SuggestionCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchBar=function SearchBar(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),placeSuggestions=_useState4[0],setPlaceSuggestions=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),lodgignSuggestions=_useState6[0],setLodgignSuggestions=_useState6[1];var debouncedSearch=useRef(null);var handleInputChange=function handleInputChange(event){setInputValue(event.target.value);if(debouncedSearch.current){debouncedSearch.current.cancel();}debouncedSearch.current=_.debounce(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(newValue){var getLocality,getLodging;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:// calling suggestions API here after delay\ngetLocality=getLocalitySuggestions({input:newValue});getLodging=getLodgingSuggestions({input:newValue});Promise.all([getLocality,getLodging]).then(function(data){setPlaceSuggestions(data[0]);setLodgignSuggestions(data[1]);}).catch(function(error){console.error(error.message);});case 3:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),200);debouncedSearch.current(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Searchcontainer\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Book your motel\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-card-dropdown\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-wrapper\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:handleInputChange,placeholder:\"Search hotels...\",className:\"search-input\"})}),/*#__PURE__*/_jsx(SuggestionCard,{placeSuggestions:placeSuggestions,inputValue:inputValue,setInputValue:setInputValue,lodgignSuggestions:lodgignSuggestions})]})]});};export default SearchBar;","map":{"version":3,"names":["React","useState","useRef","_","getLocalitySuggestions","getLodgingSuggestions","SuggestionCard","jsx","_jsx","jsxs","_jsxs","SearchBar","_useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","placeSuggestions","setPlaceSuggestions","_useState5","_useState6","lodgignSuggestions","setLodgignSuggestions","debouncedSearch","handleInputChange","event","target","value","current","cancel","debounce","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newValue","getLocality","getLodging","wrap","_callee$","_context","prev","next","input","Promise","all","then","data","catch","error","console","message","stop","_x","apply","arguments","className","children","type","onChange","placeholder"],"sources":["/Users/ankitadixit/Desktop/Assignment/temp/src/Client/SearchBar/SearchBar.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './SearchBar.css';\nimport _ from 'lodash';\nimport { Place, Lodge } from '../../types'\nimport { getLocalitySuggestions, getLodgingSuggestions } from '../../utils/api';\nimport SuggestionCard from '../SuggestionCard/SuggestionCard';\n\nconst SearchBar: React.FC = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [placeSuggestions, setPlaceSuggestions] = useState<Place[]>([]);\n  const [lodgignSuggestions, setLodgignSuggestions] = useState<Lodge[]>([]);\n\n  const debouncedSearch = useRef<(_.DebouncedFunc<(value: string) => void>) | null>(null);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value)\n    if (debouncedSearch.current) {\n      debouncedSearch.current.cancel();\n    }\n    debouncedSearch.current = _.debounce(async (newValue: string) => {\n      // calling suggestions API here after delay\n      const getLocality = getLocalitySuggestions({ input: newValue })\n      const getLodging = getLodgingSuggestions({ input: newValue })\n      Promise.all([getLocality, getLodging])\n        .then((data: any[]) => {\n          setPlaceSuggestions(data[0])\n          setLodgignSuggestions(data[1])\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }, 200);\n    debouncedSearch.current(event.target.value);\n  };\n\n  return (\n    <div className=\"Searchcontainer\">\n      <h1 className=\"title\">Book your motel</h1>\n    <div className=\"input-card-dropdown\">\n          <div className=\"input-wrapper\">\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              placeholder=\"Search hotels...\"\n              className=\"search-input\"\n            />\n          </div>\n          <SuggestionCard \n          placeSuggestions={placeSuggestions}\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n          lodgignSuggestions={lodgignSuggestions}\n          />\n    </div>\n    </div>\n  );\n};\n\nexport default SearchBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}